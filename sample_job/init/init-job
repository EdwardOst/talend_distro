#!/usr/bin/env bash

set -e
set -u
set -o pipefail

script_path=$(readlink -e "${BASH_SOURCE[0]}")
script_dir="${script_path%/*}"

#source ../../util/util.sh
source "${script_dir}/../../util/util.sh"

declare job_name="${1:-t0_docker_create_customer}"
declare app_name="${2:-talend_sample_container_app}"
declare project_name="${3:-SE_DEMO}"
declare sample_home="${4:-${TALEND_DOCKER_SAMPLE_HOME:-${HOME}/talend/docker/sample}}"

if [ "${1:-}" == "-h" ]; then
    declare usage
    define usage <<EOF
Usage

    ./init-job [ <job_name> [ <app_name> [ <project_name> [ <sample_home> ] ] ] ]

Defaults:

    job_name: "t0_docker_create_customer"
    app_name: "talend_sample_container_app"
    project_name: "SE_DEMO"
    sample_home: TALEND_DOCKER_SAMPLE_HOME or "${HOME}/talend/docker/sample"
EOF
    printf "\n%s\n\n" "${usage}" >&2
    exit
fi

declare global_dir="${sample_home}"
global_dir=$(readlink -m "${global_dir}")
declare project_dir="${global_dir}/${project_name}"
declare app_dir="${project_dir}/${app_name}"
declare job_dir="${app_dir}/${job_name}"

printf "\n"
printf "Setting up Talend docker sample environment\n"
printf "global_dir=%s\n" "${global_dir}"
printf "project_dir=%s\n" "${project_dir}"
printf "app_dir=%s\n" "${app_dir}"
printf "job_dir=%s\n" "${job_dir}"
printf "\n"

# create job config directory
mkdir -p "${job_dir}/config"

# default job_config sets the shared input directory
declare job_config_content
define job_config_content <<EOF
my_property="some_value"
EOF
declare job_config_file_path="${job_dir}/config/job.cfg"
printf "%s" "${job_config_content}" > "${job_config_file_path}"
printf "Job configuration written to: %s\n" "${job_config_file_path}"
